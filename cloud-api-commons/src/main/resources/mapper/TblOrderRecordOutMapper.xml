<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huayi.ljj.springcloud.dao.TblOrderRecordOutMapper">
  <resultMap id="BaseResultMap" type="com.huayi.ljj.springcloud.model.TblOrderRecordOut">
    <id column="ORDER_NO" jdbcType="VARCHAR" property="orderNo" />
    <result column="PRODUCT_NM" jdbcType="VARCHAR" property="productNm" />
    <result column="PRODUCT_KIND" jdbcType="VARCHAR" property="productKind" />
    <result column="PRODUCT_THICKNESS" jdbcType="VARCHAR" property="productThickness" />
    <result column="PRODUCT_LENGTH" jdbcType="VARCHAR" property="productLength" />
    <result column="SUPPLIER_NM" jdbcType="VARCHAR" property="supplierNm" />
    <result column="SUPPLIER_CD" jdbcType="VARCHAR" property="supplierCd" />
    <result column="SALE_PRICE" jdbcType="DECIMAL" property="salePrice" />
    <result column="SALE_TON_PRICE" jdbcType="DECIMAL" property="saleTonPrice" />
    <result column="SALE_NUM" jdbcType="VARCHAR" property="saleNum" />
    <result column="SALE_WEIGHT" jdbcType="VARCHAR" property="saleWeight" />
    <result column="TRANS_NO" jdbcType="VARCHAR" property="transNo" />
    <result column="TRANS_DT" jdbcType="VARCHAR" property="transDt" />
    <result column="TRANS_TM" jdbcType="VARCHAR" property="transTm" />
    <result column="VERSION" jdbcType="INTEGER" property="version" />
    <result column="TRANS_CD" jdbcType="VARCHAR" property="transCd" />
    <result column="EXTFLD1" jdbcType="VARCHAR" property="extfld1" />
    <result column="EXTFLD2" jdbcType="VARCHAR" property="extfld2" />
    <result column="EXTFLD3" jdbcType="VARCHAR" property="extfld3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ORDER_NO, PRODUCT_NM, PRODUCT_KIND, PRODUCT_THICKNESS, PRODUCT_LENGTH, SUPPLIER_NM, 
    SUPPLIER_CD, SALE_PRICE, SALE_TON_PRICE, SALE_NUM, SALE_WEIGHT, TRANS_NO, TRANS_DT, 
    TRANS_TM, VERSION, TRANS_CD, EXTFLD1, EXTFLD2, EXTFLD3
  </sql>
  <select id="selectByExample" parameterType="com.huayi.ljj.springcloud.model.TblOrderRecordOutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_order_record_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_order_record_out
    where ORDER_NO = #{orderNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tbl_order_record_out
    where ORDER_NO = #{orderNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.huayi.ljj.springcloud.model.TblOrderRecordOutExample">
    delete from tbl_order_record_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huayi.ljj.springcloud.model.TblOrderRecordOut">
    insert into tbl_order_record_out (ORDER_NO, PRODUCT_NM, PRODUCT_KIND, 
      PRODUCT_THICKNESS, PRODUCT_LENGTH, SUPPLIER_NM, 
      SUPPLIER_CD, SALE_PRICE, SALE_TON_PRICE, 
      SALE_NUM, SALE_WEIGHT, TRANS_NO, 
      TRANS_DT, TRANS_TM, VERSION, 
      TRANS_CD, EXTFLD1, EXTFLD2, 
      EXTFLD3)
    values (#{orderNo,jdbcType=VARCHAR}, #{productNm,jdbcType=VARCHAR}, #{productKind,jdbcType=VARCHAR}, 
      #{productThickness,jdbcType=VARCHAR}, #{productLength,jdbcType=VARCHAR}, #{supplierNm,jdbcType=VARCHAR}, 
      #{supplierCd,jdbcType=VARCHAR}, #{salePrice,jdbcType=DECIMAL}, #{saleTonPrice,jdbcType=DECIMAL}, 
      #{saleNum,jdbcType=VARCHAR}, #{saleWeight,jdbcType=VARCHAR}, #{transNo,jdbcType=VARCHAR}, 
      #{transDt,jdbcType=VARCHAR}, #{transTm,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, 
      #{transCd,jdbcType=VARCHAR}, #{extfld1,jdbcType=VARCHAR}, #{extfld2,jdbcType=VARCHAR}, 
      #{extfld3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huayi.ljj.springcloud.model.TblOrderRecordOut">
    insert into tbl_order_record_out
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        ORDER_NO,
      </if>
      <if test="productNm != null">
        PRODUCT_NM,
      </if>
      <if test="productKind != null">
        PRODUCT_KIND,
      </if>
      <if test="productThickness != null">
        PRODUCT_THICKNESS,
      </if>
      <if test="productLength != null">
        PRODUCT_LENGTH,
      </if>
      <if test="supplierNm != null">
        SUPPLIER_NM,
      </if>
      <if test="supplierCd != null">
        SUPPLIER_CD,
      </if>
      <if test="salePrice != null">
        SALE_PRICE,
      </if>
      <if test="saleTonPrice != null">
        SALE_TON_PRICE,
      </if>
      <if test="saleNum != null">
        SALE_NUM,
      </if>
      <if test="saleWeight != null">
        SALE_WEIGHT,
      </if>
      <if test="transNo != null">
        TRANS_NO,
      </if>
      <if test="transDt != null">
        TRANS_DT,
      </if>
      <if test="transTm != null">
        TRANS_TM,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="transCd != null">
        TRANS_CD,
      </if>
      <if test="extfld1 != null">
        EXTFLD1,
      </if>
      <if test="extfld2 != null">
        EXTFLD2,
      </if>
      <if test="extfld3 != null">
        EXTFLD3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="productNm != null">
        #{productNm,jdbcType=VARCHAR},
      </if>
      <if test="productKind != null">
        #{productKind,jdbcType=VARCHAR},
      </if>
      <if test="productThickness != null">
        #{productThickness,jdbcType=VARCHAR},
      </if>
      <if test="productLength != null">
        #{productLength,jdbcType=VARCHAR},
      </if>
      <if test="supplierNm != null">
        #{supplierNm,jdbcType=VARCHAR},
      </if>
      <if test="supplierCd != null">
        #{supplierCd,jdbcType=VARCHAR},
      </if>
      <if test="salePrice != null">
        #{salePrice,jdbcType=DECIMAL},
      </if>
      <if test="saleTonPrice != null">
        #{saleTonPrice,jdbcType=DECIMAL},
      </if>
      <if test="saleNum != null">
        #{saleNum,jdbcType=VARCHAR},
      </if>
      <if test="saleWeight != null">
        #{saleWeight,jdbcType=VARCHAR},
      </if>
      <if test="transNo != null">
        #{transNo,jdbcType=VARCHAR},
      </if>
      <if test="transDt != null">
        #{transDt,jdbcType=VARCHAR},
      </if>
      <if test="transTm != null">
        #{transTm,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="transCd != null">
        #{transCd,jdbcType=VARCHAR},
      </if>
      <if test="extfld1 != null">
        #{extfld1,jdbcType=VARCHAR},
      </if>
      <if test="extfld2 != null">
        #{extfld2,jdbcType=VARCHAR},
      </if>
      <if test="extfld3 != null">
        #{extfld3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huayi.ljj.springcloud.model.TblOrderRecordOutExample" resultType="java.lang.Long">
    select count(*) from tbl_order_record_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tbl_order_record_out
    <set>
      <if test="record.orderNo != null">
        ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productNm != null">
        PRODUCT_NM = #{record.productNm,jdbcType=VARCHAR},
      </if>
      <if test="record.productKind != null">
        PRODUCT_KIND = #{record.productKind,jdbcType=VARCHAR},
      </if>
      <if test="record.productThickness != null">
        PRODUCT_THICKNESS = #{record.productThickness,jdbcType=VARCHAR},
      </if>
      <if test="record.productLength != null">
        PRODUCT_LENGTH = #{record.productLength,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierNm != null">
        SUPPLIER_NM = #{record.supplierNm,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierCd != null">
        SUPPLIER_CD = #{record.supplierCd,jdbcType=VARCHAR},
      </if>
      <if test="record.salePrice != null">
        SALE_PRICE = #{record.salePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.saleTonPrice != null">
        SALE_TON_PRICE = #{record.saleTonPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.saleNum != null">
        SALE_NUM = #{record.saleNum,jdbcType=VARCHAR},
      </if>
      <if test="record.saleWeight != null">
        SALE_WEIGHT = #{record.saleWeight,jdbcType=VARCHAR},
      </if>
      <if test="record.transNo != null">
        TRANS_NO = #{record.transNo,jdbcType=VARCHAR},
      </if>
      <if test="record.transDt != null">
        TRANS_DT = #{record.transDt,jdbcType=VARCHAR},
      </if>
      <if test="record.transTm != null">
        TRANS_TM = #{record.transTm,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.transCd != null">
        TRANS_CD = #{record.transCd,jdbcType=VARCHAR},
      </if>
      <if test="record.extfld1 != null">
        EXTFLD1 = #{record.extfld1,jdbcType=VARCHAR},
      </if>
      <if test="record.extfld2 != null">
        EXTFLD2 = #{record.extfld2,jdbcType=VARCHAR},
      </if>
      <if test="record.extfld3 != null">
        EXTFLD3 = #{record.extfld3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbl_order_record_out
    set ORDER_NO = #{record.orderNo,jdbcType=VARCHAR},
      PRODUCT_NM = #{record.productNm,jdbcType=VARCHAR},
      PRODUCT_KIND = #{record.productKind,jdbcType=VARCHAR},
      PRODUCT_THICKNESS = #{record.productThickness,jdbcType=VARCHAR},
      PRODUCT_LENGTH = #{record.productLength,jdbcType=VARCHAR},
      SUPPLIER_NM = #{record.supplierNm,jdbcType=VARCHAR},
      SUPPLIER_CD = #{record.supplierCd,jdbcType=VARCHAR},
      SALE_PRICE = #{record.salePrice,jdbcType=DECIMAL},
      SALE_TON_PRICE = #{record.saleTonPrice,jdbcType=DECIMAL},
      SALE_NUM = #{record.saleNum,jdbcType=VARCHAR},
      SALE_WEIGHT = #{record.saleWeight,jdbcType=VARCHAR},
      TRANS_NO = #{record.transNo,jdbcType=VARCHAR},
      TRANS_DT = #{record.transDt,jdbcType=VARCHAR},
      TRANS_TM = #{record.transTm,jdbcType=VARCHAR},
      VERSION = #{record.version,jdbcType=INTEGER},
      TRANS_CD = #{record.transCd,jdbcType=VARCHAR},
      EXTFLD1 = #{record.extfld1,jdbcType=VARCHAR},
      EXTFLD2 = #{record.extfld2,jdbcType=VARCHAR},
      EXTFLD3 = #{record.extfld3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huayi.ljj.springcloud.model.TblOrderRecordOut">
    update tbl_order_record_out
    <set>
      <if test="productNm != null">
        PRODUCT_NM = #{productNm,jdbcType=VARCHAR},
      </if>
      <if test="productKind != null">
        PRODUCT_KIND = #{productKind,jdbcType=VARCHAR},
      </if>
      <if test="productThickness != null">
        PRODUCT_THICKNESS = #{productThickness,jdbcType=VARCHAR},
      </if>
      <if test="productLength != null">
        PRODUCT_LENGTH = #{productLength,jdbcType=VARCHAR},
      </if>
      <if test="supplierNm != null">
        SUPPLIER_NM = #{supplierNm,jdbcType=VARCHAR},
      </if>
      <if test="supplierCd != null">
        SUPPLIER_CD = #{supplierCd,jdbcType=VARCHAR},
      </if>
      <if test="salePrice != null">
        SALE_PRICE = #{salePrice,jdbcType=DECIMAL},
      </if>
      <if test="saleTonPrice != null">
        SALE_TON_PRICE = #{saleTonPrice,jdbcType=DECIMAL},
      </if>
      <if test="saleNum != null">
        SALE_NUM = #{saleNum,jdbcType=VARCHAR},
      </if>
      <if test="saleWeight != null">
        SALE_WEIGHT = #{saleWeight,jdbcType=VARCHAR},
      </if>
      <if test="transNo != null">
        TRANS_NO = #{transNo,jdbcType=VARCHAR},
      </if>
      <if test="transDt != null">
        TRANS_DT = #{transDt,jdbcType=VARCHAR},
      </if>
      <if test="transTm != null">
        TRANS_TM = #{transTm,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=INTEGER},
      </if>
      <if test="transCd != null">
        TRANS_CD = #{transCd,jdbcType=VARCHAR},
      </if>
      <if test="extfld1 != null">
        EXTFLD1 = #{extfld1,jdbcType=VARCHAR},
      </if>
      <if test="extfld2 != null">
        EXTFLD2 = #{extfld2,jdbcType=VARCHAR},
      </if>
      <if test="extfld3 != null">
        EXTFLD3 = #{extfld3,jdbcType=VARCHAR},
      </if>
    </set>
    where ORDER_NO = #{orderNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huayi.ljj.springcloud.model.TblOrderRecordOut">
    update tbl_order_record_out
    set PRODUCT_NM = #{productNm,jdbcType=VARCHAR},
      PRODUCT_KIND = #{productKind,jdbcType=VARCHAR},
      PRODUCT_THICKNESS = #{productThickness,jdbcType=VARCHAR},
      PRODUCT_LENGTH = #{productLength,jdbcType=VARCHAR},
      SUPPLIER_NM = #{supplierNm,jdbcType=VARCHAR},
      SUPPLIER_CD = #{supplierCd,jdbcType=VARCHAR},
      SALE_PRICE = #{salePrice,jdbcType=DECIMAL},
      SALE_TON_PRICE = #{saleTonPrice,jdbcType=DECIMAL},
      SALE_NUM = #{saleNum,jdbcType=VARCHAR},
      SALE_WEIGHT = #{saleWeight,jdbcType=VARCHAR},
      TRANS_NO = #{transNo,jdbcType=VARCHAR},
      TRANS_DT = #{transDt,jdbcType=VARCHAR},
      TRANS_TM = #{transTm,jdbcType=VARCHAR},
      VERSION = #{version,jdbcType=INTEGER},
      TRANS_CD = #{transCd,jdbcType=VARCHAR},
      EXTFLD1 = #{extfld1,jdbcType=VARCHAR},
      EXTFLD2 = #{extfld2,jdbcType=VARCHAR},
      EXTFLD3 = #{extfld3,jdbcType=VARCHAR}
    where ORDER_NO = #{orderNo,jdbcType=VARCHAR}
  </update>
</mapper>